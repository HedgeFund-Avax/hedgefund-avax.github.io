{"version":3,"sources":["theme.js","images/logo.svg","utils/promisify.js","redux/slices/coineusSlice.js","utils/currency_format.js","redux/services/dexscreener.js","components/CoineusLoading.js","components/TokenInfoDialog.js","components/TokenListItem.js","views/HomePage.js","redux/store.js","utils/fuse_price.js","utils/format.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","Coineus.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","makeBatchRequest","web3","calls","batch","BatchRequest","promises","map","call","Promise","res","rej","req","request","err","data","add","execute","all","initialState","wallet","address","undefined","chain","type","balances","avax","fuse","bnb","eth","coineusInfo","fookInfo","fudInfo","hedgeInfo","marketingWallet","info","pricesByContractAddress","prices","usdc","fook","fud","hedge","cheems","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","CHEEMSAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","rpc","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateWalletCoineusInfo","updateWalletFOOKInfo","updateWalletFUDInfo","updateWalletHEDGEInfo","updateBalances","contract_address","balance","updateHedgeFundBalances","updateHedgeFundInfo","resetWallet","updatePrices","price","actions","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","style","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetPairQuery","useGetTokenQuery","CoineusLoading","props","Dialog","open","DialogContent","margin","textAlign","src","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","network","close","skip","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","item","xs","classes","getColorClass","value","ListItem","ListItemAvatar","Avatar","baseToken","chainId","className","clsx","ListItemText","secondary","symbol","fdv","priceUsd","priceNative","quoteToken","liquidity","usd","base","quote","paddingLeft","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","TokenListItem","rewards","rewardsClaim","native","useState","setOpen","Paper","marginBottom","backgroundColor","secondaryAction","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","allTime","pending","HomePage","dispatch","useDispatch","useSelector","coineus","setPending","setInfo","totalD","setTotalD","fundTotal","setFundTotal","btc","pollingInterval","useEffect","pair","getUserInfo","getInfo","getHedgeFundInfo","getStatsInfo","interval","setInterval","clearInterval","total","Object","entries","Web3","Contract","coineus_abi","methods","getTotalDividendsDistributed","then","resp","td","hedge_fund_market_wallet","web3AVAX","getBalance","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","cheems_contract","callsAVAX","balanceOf","getAccountDividendsInfo","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","cheems_balance","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","catch","console","log","Container","maxWidth","paddingBottom","HomePagePriceWidget","avatar","marginRight","verticalAlign","fontSize","minWidth","sx","Divider","window","provider","claim","send","from","once","tx","on","error","receipt","variant","fullWidth","disabled","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","getPairPrices","store","getState","usdc_avax","unipair_abi","fook_avax","fud_avax","hedge_avax","cheems_avax","getReserves","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","cheems_avax_reserves","avax_price","reserve1","reserve0","inAVAX","formatWeiToNumber","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","amount","setAmount","setData","connectedContract","setConnectedContract","setAction","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","push","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","fuse_balance","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","delegate","estimateGas","gas","getGasPrice","gasPrice","encodeABI","txData","to","handleError","message","toString","withdraw","LinearProgress","Math","floor","toLocaleString","List","disablePadding","disableGutters","Tabs","onChange","ev","val","Tab","id","Box","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useParams","sales_contract","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","contract","sale_abi","forSale","token","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","now","getTime","distance","days","hours","minutes","seconds","purchase","sendTransaction","Breadcrumbs","separator","Link","underline","IconButton","edge","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","avax_balance","RewardsLocker","fudContract","setFudContract","coineusContract","setCoineusContract","rewards_abi","coineus_contract","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","getRewards","coineus_fund_address","CoineusPortfolio","coineus_fud_locker","coineus_fund_fook_balance","coineus_fund_fook_dividends","Coineus","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","flexGrow","getChainLogo","connectWallet","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05d518c5.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Electrolize', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#00BBC5'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.331b4abb.svg\";","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        coineusInfo: undefined,\n        fookInfo: undefined,\n        fudInfo: undefined,\n        hedgeInfo: undefined\n    },\n    marketingWallet: {\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        }\n    },\n    pricesByContractAddress: {\n        avax: {}\n    },\n    prices: {\n        avax: undefined,\n        usdc: undefined,\n        fook: undefined,\n        fud: undefined,\n        hedge: undefined,\n        cheems: undefined,\n\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        CHEEMSAVAXpair: '0x6b51D495D97d9715288EBF85B9334D8dd45f913D',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    }\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateWalletCoineusInfo(state, action) {\n            state.wallet.coineusInfo = action.payload\n        },\n\n        updateWalletFOOKInfo(state, action) {\n            state.wallet.fookInfo = action.payload\n        },\n\n        updateWalletFUDInfo(state, action) {\n            state.wallet.fudInfo = action.payload\n        },\n\n        updateWalletHEDGEInfo(state, action) {\n            state.wallet.hedgeInfo = action.payload\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateHedgeFundBalances(state, action) {\n            if(!state.marketingWallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.marketingWallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.marketingWallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateHedgeFundInfo(state, action) {\n            if(!state.marketingWallet.info[action.payload.chain][action.payload.contract_address]){\n                state.marketingWallet.info[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.marketingWallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n            state.wallet.coineusInfo = undefined;\n            state.wallet.fookInfo = undefined;\n            state.wallet.fudInfo = undefined;\n        },\n\n        updatePrices(state, action) {\n            state.prices[action.payload.name] = action.payload.price;\n\n\n            if(!state.pricesByContractAddress[action.payload.chain][action.payload.contract_address]){\n                state.pricesByContractAddress[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.pricesByContractAddress[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateBalances,\n    updateHedgeFundBalances,\n\n    updateWalletCoineusInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo,\n    updateWalletHEDGEInfo,\n\n    updateHedgeFundInfo,\n\n    resetWallet,\n    updatePrices\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import millify from \"millify\";\n\nexport function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**16)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\"\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close} = props;\n\n    const {data, status} = useGetTokenQuery(contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <PairDetails data={data.pairs[0]}\n                                    network={network}\n                    />\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${data.baseToken.address}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={data.baseToken.name}\n                secondary={data.baseToken.symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={CoineusUSDFormat(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = props;\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5,border: '1px solid #00BBc5', padding:10, backgroundColor: '#000'}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards && <>\n                <ListItem style={{color: '#00BBc5'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        {\n            !native && <TokenInfoDialog contract_address={contract_address} network={network} open={open}\n                                        close={() => setOpen(false)}/>\n        }\n    </Paper>\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Button,\n    Container, Divider,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {\n    updateBalances, updateHedgeFundBalances, updateHedgeFundInfo,\n    updateWalletFOOKInfo,\n    updateWalletFUDInfo, updateWalletHEDGEInfo,\n} from \"../redux/slices/coineusSlice\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {useGetPairQuery} from \"../redux/services/dexscreener\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nimport ArrowCircleUpIcon from '@mui/icons-material/ArrowCircleUp';\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\nimport TokenListItem from \"../components/TokenListItem\";\n\nexport default function HomePage() {\n\n    const dispatch = useDispatch();\n\n    const {wallet, marketingWallet, prices, pricesByContractAddress, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n\n    const [info, setInfo] = useState({});\n    const [totalD, setTotalD] = useState(undefined);\n\n    const [fundTotal, setFundTotal] = useState(undefined);\n\n    const btc = useGetPairQuery({\n        chain_id: 'avalanche',\n        pair_address: '0xb28031e312446415bd316c4fff52b99055c28870'\n    }, {pollingInterval: 60000})\n\n    useEffect(() => {\n        if (btc.data?.pair) setInfo(btc.data.pair);\n    }, [btc.data])\n\n    useEffect(() => {\n        if (wallet.address) {\n            getUserInfo();\n        }\n    }, [wallet.address]);\n\n    //updates coineus info\n    useEffect(() => {\n\n        function getInfo() {\n            getHedgeFundInfo();\n            getStatsInfo();\n        }\n\n        getInfo();\n        const interval = setInterval(getInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    useEffect(() => {\n        let total = 0;\n        Object.entries(marketingWallet.balances.avax).map(([contract_address, balance]) => {\n            if(balance && pricesByContractAddress.avax[contract_address]?.inUSD) {\n                total +=balance * pricesByContractAddress.avax[contract_address]?.inUSD\n            }\n        });\n        setFundTotal(total);\n\n    }, [marketingWallet, prices])\n\n    const getStatsInfo = () => {\n        const web3 = new Web3(rpc.avax);\n        const contract = new web3.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n        });\n\n    }\n\n    const getHedgeFundInfo = () => {\n\n        const hedge_fund_market_wallet = \"0x6aF557649B0A1c62D7a771Fb308673959d045945\";\n\n        //AVAX\n        const web3AVAX = new Web3(rpc.avax);\n        web3AVAX.eth.getBalance(hedge_fund_market_wallet).then(resp => {\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n        const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n        const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n        const cheems_contract = new web3AVAX.eth.Contract(coineus_abi, '0x726573a7774317DD108ACcb2720Ac9848581F01D');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(hedge_fund_market_wallet).call,\n            fook_contract.methods.getAccountDividendsInfo(hedge_fund_market_wallet).call,\n            usdc_contract.methods.balanceOf(hedge_fund_market_wallet).call,\n            fud_contract.methods.balanceOf(hedge_fund_market_wallet).call,\n            fud_contract.methods.getAccountDividendsInfo(hedge_fund_market_wallet).call,\n            wavax_contract.methods.balanceOf(hedge_fund_market_wallet).call,\n            hedge_contract.methods.balanceOf(hedge_fund_market_wallet).call,\n            hedge_contract.methods.getAccountDividendsInfo(hedge_fund_market_wallet).call,\n            cheems_contract.methods.balanceOf(hedge_fund_market_wallet).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info,\n                wavax_balance,\n                hedge_balance,\n                hedge_info,\n                cheems_balance\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateHedgeFundInfo({\n                    chain: 'avax',\n                    contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n                    info: {\n                        balance,\n                        withdrawableDividends,\n                        totalDividends,\n                        secondsUntilAutoClaimAvailable\n                    }\n                }\n            ))\n\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n                balance: balance\n            }))\n\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n                balance: usdc_balance / (10 ** 6)\n            }))\n\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n                balance: wavax_balance / (10 ** 18)\n            }))\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateHedgeFundInfo({\n                    chain: 'avax',\n                    contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n                    info: {\n                        balance,\n                        withdrawableDividends,\n                        totalDividends,\n                        secondsUntilAutoClaimAvailable\n                    }\n                }\n            ))\n\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n                balance: fud_balance\n            }))\n\n            // HEDGE TOKEN\n            withdrawableDividends = hedge_info[3];\n            totalDividends = hedge_info[4];\n            secondsUntilAutoClaimAvailable = hedge_info[7];\n\n            hedge_balance = hedge_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletHEDGEInfo({\n                balance: hedge_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateHedgeFundInfo({\n                    chain: 'avax',\n                    contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n                    info: {\n                        balance,\n                        withdrawableDividends,\n                        totalDividends,\n                        secondsUntilAutoClaimAvailable\n                    }\n                }\n            ))\n\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n                balance: hedge_balance\n            }))\n\n            dispatch(updateHedgeFundBalances({\n                chain: 'avax',\n                contract_address: '0x726573a7774317DD108ACcb2720Ac9848581F01D', //cheems\n                balance: cheems_balance / (10 ** 18)\n            }))\n\n        })\n            .catch(console.log)\n    }\n\n    const getUserInfo = () => {\n\n        //AVAX\n        const web3AVAX = new Web3(rpc.avax);\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n        const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n        const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n        const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n        const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n        const callsAVAX = [\n            fook_contract.methods.balanceOf(wallet.address).call,\n            fook_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            usdc_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.balanceOf(wallet.address).call,\n            fud_contract.methods.getAccountDividendsInfo(wallet.address).call,\n            wavax_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.balanceOf(wallet.address).call,\n            hedge_contract.methods.getAccountDividendsInfo(wallet.address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n            let [\n                balance,\n                info,\n                usdc_balance,\n                fud_balance,\n                fud_info,\n                wavax_balance,\n                hedge_balance,\n                hedge_info,\n            ] = resp;\n\n            let withdrawableDividends = info[3];\n            let totalDividends = info[4];\n            let secondsUntilAutoClaimAvailable = info[7];\n\n            balance = balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 6);\n            totalDividends = totalDividends / (10 ** 6);\n\n            dispatch(updateWalletFOOKInfo({\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n                balance: balance\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n                balance: usdc_balance / (10 ** 6)\n            }))\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n                balance: wavax_balance / (10 ** 18)\n            }))\n\n            // FUD TOKEN\n            withdrawableDividends = fud_info[3];\n            totalDividends = fud_info[4];\n            secondsUntilAutoClaimAvailable = fud_info[7];\n\n            fud_balance = fud_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletFUDInfo({\n                balance: fud_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n                balance: fud_balance\n            }))\n\n            // HEDGE TOKEN\n            withdrawableDividends = hedge_info[3];\n            totalDividends = hedge_info[4];\n            secondsUntilAutoClaimAvailable = hedge_info[7];\n\n            hedge_balance = hedge_balance / (10 ** 18);\n            withdrawableDividends = withdrawableDividends / (10 ** 18);\n            totalDividends = totalDividends / (10 ** 18);\n\n            dispatch(updateWalletHEDGEInfo({\n                balance: hedge_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }));\n\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n                balance: hedge_balance\n            }))\n\n        })\n            .catch(console.log)\n    }\n\n    const claimHedge = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    if (!Object.entries(info).length || btc.data === undefined) {\n        return <></>;\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\"\n                            price={prices.hedge?.inUSD}\n                        />\n                        <HomePagePriceWidget\n                            avatar=\"https://coineus.app/assets/tokens/avax/logo.png\"\n                            price={prices.avax?.inUSD}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{border: '1px solid #00BBc5', padding: 10, backgroundColor: '#000'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={<>\n                                    {info.priceChange.h24 >= 0 ? <ArrowCircleUpIcon style={{color: '#00ff00', marginRight: 5, verticalAlign: 'sub'}}/> :\n                                    <ArrowCircleDownIcon style={{color: '#ff0000', marginRight: 5, verticalAlign: 'sub'}}/>}\n                                    <Typography fontSize={20} style={{display:\"inline-block\"}} fontWeight={700}>{`${info.priceChange.h24}%`}</Typography>\n                                </>}\n                                secondary=\"24HR CHANGE\"\n                            />\n                            <ListItemText\n                                primary={CoineusUSDFormat(info.volume.h24)}\n                                primaryTypographyProps={{fontSize: 20, fontWeight: 700}}\n                                secondary=\"24HR VOLUME\"\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{border: '1px solid #00BBc5', padding: 10, backgroundColor: '#000'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(info.liquidity.usd)}\n                                primaryTypographyProps={{fontSize: 20, fontWeight: 700}}\n                                secondary=\"TOTAL LIQUIDITY USD\"\n                            />\n                        </ListItem>\n                        <ListItem>\n\n                            <ListItemAvatar style={{minWidth:30}}>\n                                <Avatar\n                                    src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\"\n                                    sx={{width: 24, height: 24}}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(info.liquidity.base)}\n                            />\n\n                            <ListItemAvatar style={{minWidth:30}}>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/logo.png\"\n                                        sx={{width: 24, height: 24}}/>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(info.liquidity.quote)}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper style={{border: '1px solid #00BBc5', padding: 10, backgroundColor: '#000'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${CoineusCryptoFormat(totalD)} FOOK`}\n                                secondary=\"Total Rewards Distributed All-time\"\n                                primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider style={{marginBottom: 10}}>MY WALLET</Divider>\n                    {\n                        wallet.address ?\n                            <TokenListItem\n                                contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                                name=\"HEDGE\"\n                                network=\"avax\"\n                                price={prices.hedge}\n                                wallet={wallet}\n                                rewards={{\n                                    allTime: wallet.hedgeInfo?.totalDividends,\n                                    pending: wallet.hedgeInfo?.withdrawableDividends,\n                                    symbol: 'FOOK'\n                                }}\n                                rewardsClaim={\n                                    <ListItem style={{color: '#00BBC5'}}>\n                                        <Button onClick={claimHedge} variant='contained' fullWidth\n                                                disabled={\n                                                    wallet.chain !== 43114 ||\n                                                    wallet.hedgeInfo?.withdrawableDividends === 0 ||\n                                                    !wallet.address ||\n                                                    wallet.hedgeInfo?.secondsUntilAutoClaimAvailable > 0\n                                                }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.hedgeInfo?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                                    </ListItem>\n                                }\n                            />\n                            :\n                            <Paper style={{border: '1px solid #00BBc5', padding: 10, backgroundColor: '#000'}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary=\"CONNECT WALLET\"\n                                        primaryTypographyProps={{textAlign: 'center', fontSize: 20, color: 'primary'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider style={{marginBottom: 10}}>HEDGE FUND HOLDINGS</Divider>\n                    <Grid item xs={12}>\n                        <Paper style={{color: '#fff', backgroundColor: '#00BBC5'}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusUSDFormat(fundTotal)}\n                                    secondary=\"Fund Total Value\"\n                                    primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize: '2.125rem'}}\n                                    secondaryTypographyProps={{textAlign: 'right', color: '#fff'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    </Grid>\n                    <TokenListItem\n                        contract_address=\"native\"\n                        name=\"AVAX\"\n                        network=\"avax\"\n                        price={prices.avax}\n                        wallet={marketingWallet}\n                    />\n                    <TokenListItem\n                        contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                        name=\"USDC\"\n                        network=\"avax\"\n                        price={{inUSD: 1}}\n                        wallet={marketingWallet}\n                    />\n                    <TokenListItem\n                        contract_address=\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"\n                        name=\"HEDGE\"\n                        network=\"avax\"\n                        price={prices.hedge}\n                        wallet={marketingWallet}\n                        rewards={{\n                            allTime: marketingWallet.info.avax[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.totalDividends,\n                            pending: marketingWallet.info.avax[\"0xe387cF241B6685D405C575ce35db78ed4844B34a\"]?.withdrawableDividends,\n                            symbol: 'FOOK'\n                        }}\n                    />\n                    <TokenListItem\n                        contract_address=\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"\n                        name=\"FOOK\"\n                        network=\"avax\"\n                        price={prices.fook}\n                        wallet={marketingWallet}\n                        rewards={{\n                            allTime: marketingWallet.info.avax[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.totalDividends,\n                            pending: marketingWallet.info.avax[\"0x95923F63dA09B4f7520f7C65a31F318D8228B744\"]?.withdrawableDividends,\n                            symbol: 'USDC'\n                        }}\n                    />\n                    <TokenListItem\n                        contract_address=\"0x726573a7774317DD108ACcb2720Ac9848581F01D\"\n                        name=\"CheemsX\"\n                        network=\"avax\"\n                        price={prices.cheems}\n                        wallet={marketingWallet}\n                    />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    );\n}\n\n\nfunction HomePagePriceWidget(props) {\n\n    const {avatar, price} = props;\n\n    return <Grid item xs={6}>\n        <Paper style={{border: '1px solid #00BBc5', padding: 10, backgroundColor: '#000'}}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar src={avatar}/>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={CoineusUSDFormat(price)}\n                    primaryTypographyProps={{textAlign: 'right', fontSize: 20, fontWeight: 700}}\n                />\n            </ListItem>\n        </Paper>\n    </Grid>\n}","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n\n    const _store = store.getState();\n\n    const {prices, rpc} = _store.coineus;\n\n    //AVAX\n    const web3AVAX = new Web3(rpc.avax);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, prices.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, prices.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, prices.HEDGEAVAXpair);\n    const cheems_avax = new web3AVAX.eth.Contract(unipair_abi, prices.CHEEMSAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        cheems_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                cheems_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            store.dispatch(updatePrices({\n                name: 'avax',\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'usdc',\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fook',\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'fud',\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'hedge',\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            store.dispatch(updatePrices({\n                name: 'cheems',\n                chain: 'avax',\n                contract_address: '0x726573a7774317DD108ACcb2720Ac9848581F01D',\n                price: {\n                    inAVAX: cheems_avax_reserves.reserve1/cheems_avax_reserves.reserve0,\n                    inUSD: cheems_avax_reserves.reserve1/cheems_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n        });\n\n\n}","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {updateBalances} from \"../redux/slices/coineusSlice\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const dispatch = useDispatch();\n    const {wallet, prices} = useSelector(state => state.coineus);\n\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n\n            web3.eth.getBalance(wallet.address).then(resp => {\n                dispatch(updateBalances({\n                    chain: 'fuse',\n                    contract_address: 'native',\n                    balance: resp / (10 ** 18)\n                }))\n            })\n        } else {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: 0\n            }))\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * prices.fuse?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}} onClick={()=>setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * prices.fuse?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#fbca00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#fbca00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Paper>\n                        <Tabs\n                            variant=\"fullWidth\"\n                            value={action}\n                            onChange={(ev, val) => {\n                                setAction(val)\n                                setAmount('')\n                            }}\n                        >\n                            <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                            <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                        </Tabs>\n                        {\n                            action === \"stake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"FUSE Balance\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > 5000000) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(wallet.balances.fuse.native - .1)\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                        onClick={delegate}>Stake</Button>\n                                <List style={{marginTop: 20}}>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Block\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Est. Rewards Per Year\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 6\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                            </Box>\n                        }\n\n                        {\n                            action === \"unstake\" && <Box style={{padding: 20}}>\n                                <List>\n                                    <ListItem disableGutters disablePadding>\n                                        <ListItemText\n                                            secondary=\"Staked FUSE\"\n                                        />\n                                        <ListItemText\n                                            secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                minimumFractionDigits: 2,\n                                                maximumFractionDigits: 8\n                                            })} FUSE`}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </List>\n                                <FormControl fullWidth style={{marginBottom: 20}}>\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        type=\"number\"\n                                        value={amount}\n                                        placeholder=\"Enter Amount\"\n                                        onChange={(ev) => {\n                                            if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                            setAmount(ev.target.value)\n                                        }}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">\n                                                <Button variant=\"contained\" onClick={() => {\n                                                    setAmount(data.staked_amount / (10 ** 18))\n                                                }\n                                                }>MAX</Button>\n                                            </InputAdornment>,\n                                        }}\n                                    />\n                                </FormControl>\n                                <Button fullWidth variant=\"contained\"\n                                        disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                        onClick={withdraw}>Unstake</Button>\n                            </Box>\n                        }\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #fbca00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Button, Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function RewardsLocker() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n\n    const [fudContract, setFudContract] = useState(undefined);\n    const [coineusContract, setCoineusContract] = useState(undefined);\n\n\n    useEffect(() => {\n\n        if (!wallet.address) return;\n\n        const web3AVAX = new Web3(window.provider);\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        setFudContract(fud_contract);\n        setCoineusContract(coineus_contract);\n\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    const claim = (contract) => {\n        contract.methods.getRewards()\n            .send({from:wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.fud_claimer && <Button variant=\"contained\" fullWidth style={{marginTop: 20}} onClick={()=>claim(fudContract)}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">Coineus Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.coineus_claimer && <Button variant=\"contained\" fullWidth style={{marginTop: 20}} onClick={()=>claim(coineusContract)}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\n\nconst coineus_fund_address = \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\";\n\nexport default function CoineusPortfolio() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4]/(10**6)\n            })\n\n        });\n\n    }, []);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD Token\"\n                                secondary=\"Rewards Locker\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" AVAX\"}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK Token\"\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import {AppBar, Avatar, Button, CssBaseline, Grid, ThemeProvider, Toolbar, Typography} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/fuse_price\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if(window.ethereum){\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            dispatch(resetWallet())\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return ()=> clearInterval(interval);\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none'}}\n                        >\n                            <Avatar src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\" height={40} variant=\"square\" />\n\n                        </RouterLink>\n                        <Typography variant=\"h5\" style={{paddingLeft: 5}}>Hedge Fund</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {clearWallet();}}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales />}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails />}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker />}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n\n    const size ={ width: 16, height: 16 }\n    const style = {marginRight: 10}\n    switch (id) {\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style} />\n        default:\n            return ''\n    }\n\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}